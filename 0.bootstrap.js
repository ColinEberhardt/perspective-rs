(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/perspective_rs.js":
/*!********************************!*\
  !*** ../pkg/perspective_rs.js ***!
  \********************************/
/*! exports provided: Table, View, __wbindgen_string_new, __wbindgen_object_drop_ref, __wbindgen_json_parse, __wbindgen_json_serialize, __wbindgen_throw, __wbindgen_rethrow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./perspective_rs_bg.wasm */ \"../pkg/perspective_rs_bg.wasm\");\n/* harmony import */ var _perspective_rs_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./perspective_rs_bg.js */ \"../pkg/perspective_rs_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Table\", function() { return _perspective_rs_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Table\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"View\", function() { return _perspective_rs_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"View\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return _perspective_rs_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_string_new\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return _perspective_rs_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_object_drop_ref\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_parse\", function() { return _perspective_rs_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_json_parse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_serialize\", function() { return _perspective_rs_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_json_serialize\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _perspective_rs_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_rethrow\", function() { return _perspective_rs_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_rethrow\"]; });\n\n\n\n\n//# sourceURL=webpack:///../pkg/perspective_rs.js?");

/***/ }),

/***/ "../pkg/perspective_rs_bg.js":
/*!***********************************!*\
  !*** ../pkg/perspective_rs_bg.js ***!
  \***********************************/
/*! exports provided: Table, View, __wbindgen_string_new, __wbindgen_object_drop_ref, __wbindgen_json_parse, __wbindgen_json_serialize, __wbindgen_throw, __wbindgen_rethrow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Table\", function() { return Table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"View\", function() { return View; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return __wbindgen_string_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_parse\", function() { return __wbindgen_json_parse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_serialize\", function() { return __wbindgen_json_serialize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_rethrow\", function() { return __wbindgen_rethrow; });\n/* harmony import */ var _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./perspective_rs_bg.wasm */ \"../pkg/perspective_rs_bg.wasm\");\n\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetInt32Memory0 = new Int32Array(_perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n*/\nclass Table {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Table.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_table_free\"](ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    size() {\n        var ret = _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"table_size\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {string}\n    */\n    columns() {\n        try {\n            _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"table_columns\"](8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n        }\n    }\n    /**\n    * @param {string} config\n    * @returns {View}\n    */\n    to_view(config) {\n        var ptr0 = passStringToWasm0(config, _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"table_to_view\"](this.ptr, ptr0, len0);\n        return View.__wrap(ret);\n    }\n    /**\n    * @param {any} json\n    */\n    constructor(json) {\n        var ret = _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"table_new\"](addHeapObject(json));\n        return Table.__wrap(ret);\n    }\n}\n/**\n*/\nclass View {\n\n    static __wrap(ptr) {\n        const obj = Object.create(View.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_view_free\"](ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get num_rows() {\n        var ret = _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_num_rows\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set num_rows(arg0) {\n        _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_num_rows\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get num_columns() {\n        var ret = _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_num_columns\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set num_columns(arg0) {\n        _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_num_columns\"](this.ptr, arg0);\n    }\n    /**\n    * @param {Table} table\n    * @param {string} config\n    * @returns {View}\n    */\n    static new(table, config) {\n        _assertClass(table, Table);\n        var ptr0 = passStringToWasm0(config, _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"view_new\"](table.ptr, ptr0, len0);\n        return View.__wrap(ret);\n    }\n    /**\n    * @returns {any}\n    */\n    to_columns() {\n        var ret = _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"view_to_columns\"](this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    columns() {\n        try {\n            _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"view_columns\"](8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n        }\n    }\n}\n\nconst __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nconst __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nconst __wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _perspective_rs_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nconst __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\n\n\n//# sourceURL=webpack:///../pkg/perspective_rs_bg.js?");

/***/ }),

/***/ "../pkg/perspective_rs_bg.wasm":
/*!*************************************!*\
  !*** ../pkg/perspective_rs_bg.wasm ***!
  \*************************************/
/*! exports provided: memory, __wbg_table_free, table_size, table_columns, table_to_view, table_new, __wbg_view_free, __wbg_get_view_num_rows, __wbg_set_view_num_rows, __wbg_get_view_num_columns, __wbg_set_view_num_columns, view_new, view_to_columns, view_columns, __wbindgen_malloc, __wbindgen_realloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./perspective_rs_bg.js */ \"../pkg/perspective_rs_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/perspective_rs_bg.wasm?");

/***/ }),

/***/ "./src/computed-functions.js":
/*!***********************************!*\
  !*** ./src/computed-functions.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// the perspective source-code has a number of these functions hard-coded into the parser. In order to make the code\n// happy, this is the default set of computed functions.\n\nconst functions = {\"abs\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"abs\",\"format_function\":\"x => `abs(${x})`\",\"help\":\"Returns the absolute value of the numeric column.\",\"input_type\":\"float\",\"label\":\"abs(x)\",\"name\":\"abs\",\"num_params\":1,\"pattern\":\"abs\",\"return_type\":\"float\",\"signature\":\"abs(x: Number): Number\"},\"add\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"+\",\"format_function\":\"(x, y) => `(${x} + ${y})`\",\"help\":\"Add together two numeric columns.\",\"input_type\":\"float\",\"label\":\"+\",\"name\":\"add\",\"num_params\":2,\"pattern\":\"\\\\+\",\"return_type\":\"float\",\"signature\":\"(x: Number) + (y: Number): Number\"},\"bin10\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (10)\",\"format_function\":\"x => `bin10(${x})`\",\"help\":\"Buckets the numeric column to the nearest 10.\",\"input_type\":\"float\",\"label\":\"Bucket x by 10\",\"name\":\"bin10\",\"num_params\":1,\"pattern\":\"bin10\",\"return_type\":\"float\",\"signature\":\"bin10(x: Number): Number\"},\"bin100\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (100)\",\"format_function\":\"x => `bin100(${x})`\",\"help\":\"Buckets the numeric column to the nearest 100.\",\"input_type\":\"float\",\"label\":\"Bucket x by 100\",\"name\":\"bin100\",\"num_params\":1,\"pattern\":\"bin100\",\"return_type\":\"float\",\"signature\":\"bin100(x: Number): Number\"},\"bin1000\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (1000)\",\"format_function\":\"x => `bin1000(${x})`\",\"help\":\"Buckets the numeric column to the nearest 1000.\",\"input_type\":\"float\",\"label\":\"Bucket x by 1000\",\"name\":\"bin1000\",\"num_params\":1,\"pattern\":\"bin1000\",\"return_type\":\"float\",\"signature\":\"bin1000(x: Number): Number\"},\"bin1000th\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (1/1000)\",\"format_function\":\"x => `bin1000th(${x})`\",\"help\":\"Buckets the numeric column to the nearest 0.001.\",\"input_type\":\"float\",\"label\":\"Bucket x by 1/1000\",\"name\":\"bin1000th\",\"num_params\":1,\"pattern\":\"bin1000th\",\"return_type\":\"float\",\"signature\":\"bin1000th(x: Number): Number\"},\"bin100th\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (1/100)\",\"format_function\":\"x => `bin100th(${x})`\",\"help\":\"Buckets the numeric column to the nearest 0.01.\",\"input_type\":\"float\",\"label\":\"Bucket x by 1/100\",\"name\":\"bin100th\",\"num_params\":1,\"pattern\":\"bin100th\",\"return_type\":\"float\",\"signature\":\"bin100th(x: Number): Number\"},\"bin10th\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (1/10)\",\"format_function\":\"x => `bin10th(${x})`\",\"help\":\"Buckets the numeric column to the nearest 0.1.\",\"input_type\":\"float\",\"label\":\"Bucket x by 1/10\",\"name\":\"bin10th\",\"num_params\":1,\"pattern\":\"bin10th\",\"return_type\":\"float\",\"signature\":\"bin10th(x: Number): Number\"},\"concat_comma\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"concat_comma\",\"format_function\":\"x => `concat_comma(${x})`\",\"help\":\"Concatenates two columns with a comma.\",\"input_type\":\"string\",\"label\":\"Concat(x, y) with comma\",\"name\":\"concat_comma\",\"num_params\":2,\"pattern\":\"concat_comma\",\"return_type\":\"string\",\"signature\":\"concat_comma(x: String, y: String): String\"},\"concat_space\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"concat_space\",\"format_function\":\"x => `concat_space(${x})`\",\"help\":\"Concatenates two columns with a space.\",\"input_type\":\"string\",\"label\":\"Concat(x, y) with space\",\"name\":\"concat_space\",\"num_params\":2,\"pattern\":\"concat_space\",\"return_type\":\"string\",\"signature\":\"concat_space(x: String, y: String): String\"},\"day_bucket\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (D)\",\"format_function\":\"x => `day_bucket(${x})`\",\"help\":\"Buckets the datetime column to the nearest day.\",\"input_type\":\"datetime\",\"label\":\"Bucket(x) by days\",\"name\":\"day_bucket\",\"num_params\":1,\"pattern\":\"day_bucket\",\"return_type\":\"date\",\"signature\":\"day_bucket(x: Datetime): Datetime\"},\"day_of_week\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Day of Week\",\"format_function\":\"x => `day_of_week(${x})`\",\"help\":\"Returns the day of week in UTC for the datetime column.\",\"input_type\":\"datetime\",\"label\":\"Day of week\",\"name\":\"day_of_week\",\"num_params\":1,\"pattern\":\"day_of_week\",\"return_type\":\"string\",\"signature\":\"day_of_week(x: Datetime): String\"},\"divide\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"/\",\"format_function\":\"(x, y) => `(${x} / ${y})`\",\"help\":\"Divides two numeric columns.\",\"input_type\":\"float\",\"label\":\"/\",\"name\":\"divide\",\"num_params\":2,\"pattern\":\"\\\\/\",\"return_type\":\"float\",\"signature\":\"(x: Number) / (y: Number): Number\"},\"equals\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"equals\",\"format_function\":\"x => `(x, y) => `(${x} == ${y})`\",\"help\":\"Checks the equality of two numeric columns.\",\"input_type\":\"float\",\"label\":\"x == y\",\"name\":\"equals\",\"num_params\":2,\"pattern\":\"\\\\==\",\"return_type\":\"boolean\",\"signature\":\"(x: Number) == (y: Number): Boolean\"},\"exp\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"exp\",\"format_function\":\"x => `exp(${x})`\",\"help\":\"Returns the base-e exponent of the numeric column.\",\"input_type\":\"float\",\"label\":\"exp(x)\",\"name\":\"exp\",\"num_params\":1,\"pattern\":\"exp\",\"return_type\":\"float\",\"signature\":\"exp(x: Number): Number\"},\"greater_than\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"greater_than\",\"format_function\":\"x => `(x, y) => `(${x} > ${y})`\",\"help\":\"Whether the first numeric column is greater than the second numeric column.\",\"input_type\":\"float\",\"label\":\"x > y\",\"name\":\"greater_than\",\"num_params\":2,\"pattern\":\"\\\\>\",\"return_type\":\"boolean\",\"signature\":\"(x: Number) > (y: Number): Boolean\"},\"hour_bucket\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (h)\",\"format_function\":\"x => `hour_bucket(${x})`\",\"help\":\"Buckets the datetime column to the nearest hour.\",\"input_type\":\"datetime\",\"label\":\"Bucket(x) by hours\",\"name\":\"hour_bucket\",\"num_params\":1,\"pattern\":\"hour_bucket\",\"return_type\":\"datetime\",\"signature\":\"hour_bucket(x: Datetime): Datetime\"},\"hour_of_day\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Hour of Day\",\"format_function\":\"x => `hour_of_day(${x})`\",\"help\":\"Returns the hour of day (0-23) in UTC for the datetime column.\",\"input_type\":\"datetime\",\"label\":\"Hour of day\",\"name\":\"hour_of_day\",\"num_params\":1,\"pattern\":\"hour_of_day\",\"return_type\":\"integer\",\"signature\":\"hour_of_day(x: Datetime): Number\"},\"invert\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"1/x\",\"format_function\":\"x => `(1 / ${x})`\",\"help\":\"Returns 1 / the numeric column.\",\"input_type\":\"float\",\"label\":\"1 / x\",\"name\":\"invert\",\"num_params\":1,\"pattern\":\"invert\",\"return_type\":\"float\",\"signature\":\"invert(x: Number): Number\"},\"is\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"is\",\"format_function\":\"x => `(x, y) => `(${x} < ${y})`\",\"help\":\"Checks equality of two string columns.\",\"input_type\":\"string\",\"label\":\"x is y\",\"name\":\"is\",\"num_params\":2,\"pattern\":\"is\",\"return_type\":\"boolean\",\"signature\":\"(x: String) is (y: String): Boolean\"},\"length\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"length\",\"format_function\":\"x => `length(${x})`\",\"help\":\"Returns the length of the string column.\",\"input_type\":\"string\",\"label\":\"length(x)\",\"name\":\"length\",\"num_params\":1,\"pattern\":\"length\",\"return_type\":\"integer\",\"signature\":\"length(x: String): Number\"},\"less_than\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"less_than\",\"format_function\":\"x => `(x, y) => `(${x} < ${y})`\",\"help\":\"Whether the first numeric column is less than the second numeric column.\",\"input_type\":\"float\",\"label\":\"x < y\",\"name\":\"less_than\",\"num_params\":2,\"pattern\":\"\\\\<\",\"return_type\":\"boolean\",\"signature\":\"(x: Number) < (y: Number): Boolean\"},\"log\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"log\",\"format_function\":\"x => `log(${x})`\",\"help\":\"Returns the natural log of the numeric column.\",\"input_type\":\"float\",\"label\":\"log(x)\",\"name\":\"log\",\"num_params\":1,\"pattern\":\"log\",\"return_type\":\"float\",\"signature\":\"log(x: Number): Number\"},\"lowercase\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Lowercase\",\"format_function\":\"x => `lowercase(${x})`\",\"help\":\"Converts each string to lowercase in the column.\",\"input_type\":\"string\",\"label\":\"lowercase(x)\",\"name\":\"lowercase\",\"num_params\":1,\"pattern\":\"lowercase\",\"return_type\":\"string\",\"signature\":\"lowercase(x: String): String\"},\"minute_bucket\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (m)\",\"format_function\":\"x => `minute_bucket(${x})`\",\"help\":\"Buckets the datetime column to the nearest minute.\",\"input_type\":\"datetime\",\"label\":\"Bucket(x) by minutes\",\"name\":\"minute_bucket\",\"num_params\":1,\"pattern\":\"minute_bucket\",\"return_type\":\"datetime\",\"signature\":\"minute_bucket(x: Datetime): Datetime\"},\"month_bucket\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (M)\",\"format_function\":\"x => `month_bucket(${x})`\",\"help\":\"Buckets the datetime column to the nearest month.\",\"input_type\":\"datetime\",\"label\":\"Bucket(x) by months\",\"name\":\"month_bucket\",\"num_params\":1,\"pattern\":\"month_bucket\",\"return_type\":\"date\",\"signature\":\"month_bucket(x: Datetime): Datetime\"},\"month_of_year\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Month of Year\",\"format_function\":\"x => `month_of_year(${x})`\",\"help\":\"Returns the month of year in UTC for the datetime column.\",\"input_type\":\"datetime\",\"label\":\"Month of year\",\"name\":\"month_of_year\",\"num_params\":1,\"pattern\":\"month_of_year\",\"return_type\":\"string\",\"signature\":\"month_of_year(x: Datetime): String\"},\"multiply\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"*\",\"format_function\":\"(x, y) => `(${x} * ${y})`\",\"help\":\"Multiplies two numeric columns.\",\"input_type\":\"float\",\"label\":\"*\",\"name\":\"multiply\",\"num_params\":2,\"pattern\":\"\\\\*\",\"return_type\":\"float\",\"signature\":\"(x: Number) * (y: Number): Number\"},\"not_equals\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"not_equals\",\"format_function\":\"x => `(x, y) => `(${x} != ${y})`\",\"help\":\"Whether two numeric columns are not equal.\",\"input_type\":\"float\",\"label\":\"x != y\",\"name\":\"not_equals\",\"num_params\":2,\"pattern\":\"\\\\!=\",\"return_type\":\"boolean\",\"signature\":\"(x: Number) != (y: Number): Boolean\"},\"percent_of\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"%\",\"format_function\":\"x => `(x, y) => `(${x} % ${y})`\",\"help\":\"Returns the first column as a percent of the second column.\",\"input_type\":\"float\",\"label\":\"x % y\",\"name\":\"percent_of\",\"num_params\":2,\"pattern\":\"\\\\%\",\"return_type\":\"float\",\"signature\":\"(x: Number) % (y: Number): Number\"},\"pow\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"pow\",\"format_function\":\"x => `(${x} ^ ${y})`\",\"help\":\"Raises the first column to the power of the second column.\",\"input_type\":\"float\",\"label\":\"x ^ y\",\"name\":\"pow\",\"num_params\":2,\"pattern\":\"\\\\^\",\"return_type\":\"float\",\"signature\":\"(x: Number) ^ (y: Number): Number\"},\"pow2\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"x^2\",\"format_function\":\"x => `(${x} ^ 2)`\",\"help\":\"Returns the numeric column to the power of 2.\",\"input_type\":\"float\",\"label\":\"x ^ 2\",\"name\":\"pow2\",\"num_params\":1,\"pattern\":\"pow2\",\"return_type\":\"float\",\"signature\":\"pow2(x: Number): Number\"},\"second_bucket\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (s)\",\"format_function\":\"x => `second_bucket(${x})`\",\"help\":\"Buckets the datetime column to the nearest second.\",\"input_type\":\"datetime\",\"label\":\"Bucket(x) by seconds\",\"name\":\"second_bucket\",\"num_params\":1,\"pattern\":\"second_bucket\",\"return_type\":\"datetime\",\"signature\":\"second_bucket(x: Datetime): Datetime\"},\"sqrt\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"sqrt\",\"format_function\":\"x => `sqrt(${x})`\",\"help\":\"Returns the square root of the numeric column.\",\"input_type\":\"float\",\"label\":\"sqrt(x)\",\"name\":\"sqrt\",\"num_params\":1,\"pattern\":\"sqrt\",\"return_type\":\"float\",\"signature\":\"sqrt(x: Number): Number\"},\"subtract\":{\"category\":\"OperatorTokenType\",\"computed_function_name\":\"-\",\"format_function\":\"(x, y) => `(${x} - ${y})`\",\"help\":\"Subtract two numeric columns.\",\"input_type\":\"float\",\"label\":\"-\",\"name\":\"subtract\",\"num_params\":2,\"pattern\":\"\\\\-\",\"return_type\":\"float\",\"signature\":\"(x: Number) - (y: Number): Number\"},\"uppercase\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Uppercase\",\"format_function\":\"x => `uppercase(${x})`\",\"help\":\"Converts each string to uppercase in the column.\",\"input_type\":\"string\",\"label\":\"uppercase(x)\",\"name\":\"uppercase\",\"num_params\":1,\"pattern\":\"uppercase\",\"return_type\":\"string\",\"signature\":\"uppercase(x: String): String\"},\"week_bucket\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (W)\",\"format_function\":\"x => `week_bucket(${x})`\",\"help\":\"Buckets the datetime column to the nearest week.\",\"input_type\":\"datetime\",\"label\":\"Bucket(x) by weeks\",\"name\":\"week_bucket\",\"num_params\":1,\"pattern\":\"week_bucket\",\"return_type\":\"date\",\"signature\":\"week_bucket(x: Datetime): Datetime\"},\"year_bucket\":{\"category\":\"FunctionTokenType\",\"computed_function_name\":\"Bucket (Y)\",\"format_function\":\"x => `year_bucket(${x})`\",\"help\":\"Buckets the datetime column to the nearest year.\",\"input_type\":\"datetime\",\"label\":\"Bucket(x) by years\",\"name\":\"year_bucket\",\"num_params\":1,\"pattern\":\"year_bucket\",\"return_type\":\"date\",\"signature\":\"year_bucket(x: Datetime): Datetime\"}};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (functions);\n\n//# sourceURL=webpack:///./src/computed-functions.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./table */ \"./src/table.js\");\n\n// import {schema, data} from \"./olympics\";\n\n\nconst stuff = [\n  { x: 1, y: \"a\", z: true },\n  { x: 1, y: \"b\", z: false },\n  { x: 1, y: \"c\", z: true },\n  { x: 4, y: \"d\", z: false },\n  { x: 4, y: \"d\", z: false },\n  { x: 3, y: \"e\", z: false },\n  { x: 5, y: \"a\", z: false },\n  { x: 5, y: \"b\", z: false },\n  { x: 5, y: \"f\", z: false },\n  { x: 1, y: \"a\", z: true },\n  { x: 1, y: \"b\", z: false },\n  { x: 1, y: \"c\", z: true },\n  { x: 4, y: \"d\", z: false },\n  { x: 4, y: \"d\", z: false },\n  { x: 3, y: \"e\", z: false },\n  { x: 5, y: \"a\", z: false },\n  { x: 5, y: \"b\", z: false },\n  { x: 5, y: \"f\", z: false },\n];\n\nconst stuff_schema = {\n  x: \"integer\",\n  y: \"string\",\n  z: \"boolean\"\n};\n\nconst table = new _table__WEBPACK_IMPORTED_MODULE_0__[\"default\"](stuff_schema, stuff);\nviewer.toggleConfig();\nviewer.load(table);\n\n// const worker = perspective.worker();\n// const table = worker.table(stuff_schema);\n// table.update(stuff);\n\n// const view_handler = {\n//   get: function (target, prop, receiver) {\n//     console.log(\"view\", prop);\n//     if (prop === \"to_columns\") {\n//       target.to_columns().then(c => {\n//         console.log(JSON.stringify(c))\n//       })\n//     }\n//     if (prop === \"num_rows\") {\n//       console.log(target.num_rows())\n//     }\n//     if (prop === \"column_paths\") {\n//       console.log(target.column_paths())\n//     }\n//     if (typeof prop === \"function\") {\n//       console.log(\"view\", prop, prop());\n//     }\n//     return Reflect.get(...arguments);\n//   }\n// };\n\n// const table_handler = {\n//   get: function (target, prop, receiver) {\n//     console.log(\"table\", prop);\n//     if (prop === \"view\") {\n//       return function (...args) {\n//         const view = target.view(...args);\n//         console.log(args[0]);\n//         const view_proxy = new Proxy(view, view_handler)\n//         return view_proxy;\n//       };\n//     } else {\n//       return Reflect.get(...arguments);\n//     }\n//   }\n// };\n\n// const table_proxy = new Proxy(table2, table_handler);\n\n\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/table.js":
/*!**********************!*\
  !*** ./src/table.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Table; });\n/* harmony import */ var perspective_rs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! perspective-rs */ \"../pkg/perspective_rs.js\");\n/* harmony import */ var _computed_functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computed-functions */ \"./src/computed-functions.js\");\n/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view */ \"./src/view.js\");\n\n\n\n\n\nclass Table {\n  constructor(schema, data) {\n    this._data = data;\n    this._adaptee = new perspective_rs__WEBPACK_IMPORTED_MODULE_0__[\"Table\"](data);\n    this._schema = schema;\n    this.type = \"table\";\n  }\n\n  columns() {\n    return Promise.resolve(this._adaptee.columns().split(\",\"));\n  }\n\n  schema() {\n    return Promise.resolve(this._schema);\n  }\n\n  computed_schema() {\n    return Promise.resolve({});\n  }\n\n  compute() {\n    return \"\";\n  }\n\n  make_port() {\n    return \"\";\n  }\n\n  view(config) {\n    console.log(config);\n    const view = this._adaptee.to_view(JSON.stringify(config));\n    return new _view__WEBPACK_IMPORTED_MODULE_2__[\"default\"](config, view, this);\n  }\n\n  get_computed_functions() {\n    return _computed_functions__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n  }\n\n  size() {\n    return this._adaptee.size();\n  }\n}\n\n//# sourceURL=webpack:///./src/table.js?");

/***/ }),

/***/ "./src/view.js":
/*!*********************!*\
  !*** ./src/view.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return View; });\nclass View {\n  constructor(config, adaptee, table) {\n    this._config = config;\n    this._adaptee = adaptee;\n    this._table = table;\n  }\n\n  get_config() {\n    return this._config;\n  }\n\n  delete() {}\n\n  on_update() {}\n\n  remove_update() {}\n\n  num_rows() {\n    return Promise.resolve(this._adaptee.num_rows);\n  }\n\n  num_columns() {\n    return Promise.resolve(this._adaptee.num_columns);\n  }\n\n  schema() {\n    return this._table.schema();\n  }\n\n  to_columns() {\n    const t0 = performance.now();\n    let cols = this._adaptee.to_columns();\n    const t1 = performance.now();\n    if (cols.__ROW_PATH__) {\n      cols.__ROW_PATH__ = cols.__ROW_PATH__.map(s => s ? [s] : []);\n    }\n    console.log(`Call to to_columns took ${t1 - t0} milliseconds.`);\n    return Promise.resolve(cols);\n  }\n\n  column_paths() {\n    // TODO - sort our column ordering - we sort here to push __ROW_PATH__ to the front\n    const paths = this._adaptee.columns().split(\",\");\n    return Promise.resolve(paths);\n  }\n}\n\n//# sourceURL=webpack:///./src/view.js?");

/***/ })

}]);